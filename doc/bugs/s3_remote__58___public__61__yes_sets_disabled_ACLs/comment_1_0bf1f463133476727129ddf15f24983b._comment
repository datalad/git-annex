[[!comment format=mdwn
 username="joey"
 subject="""comment 1"""
 date="2023-07-21T17:04:19Z"
 content="""
This only affects new S3 buckets. Existing S3 buckets that were
created before April 2023 and were set up to allow public access should
keep working, including ACL settings when storing new files in them.
Per Amazon's announcement, "There is no change for existing buckets."

So users who create new buckets will need to set `public=no` 
(the default) and set a bucket policy instread. See 
[this comment](https://git-annex.branchable.com/special_remotes/S3/#comment-fcfba0021592de4c1425d3bf3c9563d3)
for an example policy.

That comment also suggests:

* If public=yes, instead of trying to set an ACL, first try HEAD on the
  newly uploaded object without using the AWS_ACCESS_KEY. Only if that
  fails, fall over to trying to set an ACL. And if you get
  AccessControlListNotSupported (i.e. the error due to
  BucketOwnerEnforced), then give a warning that the bucket policy is not
  configured for public access.

However, the ACL is currently sent at past of the PutObject request. And 
either there is not a way to change the ACL later, or the aws haskell library
is missing support for the API to do that.

I think what needs to be done is discourage initializing new S3 remotes
with public=yes, since it won't work. (Assuming some other S3
implementation than Amazon doesn't keep on supporting ACLs.)

And allow setting publicurl=yes without public=yes, so users who create
new buckets and configure a bucket policy to allow public access can tell
git-annex it's set up that way, so it will download from the bucket w/o S3
credentials.

While git-annex could HEAD without creds when publicyes=yes to verify that
the user has configured the bucket correctly, that would add some overhead,
and I guess if the user has not configured the bucket correctly, they will
notice in some other way eventually and can fix its bucket policy after the
fact. So I'm inclined not to do that.
"""]]
