[[!comment format=mdwn
 username="https://launchpad.net/~stephane-gourichon-lpad"
 nickname="stephane-gourichon-lpad"
 avatar="http://cdn.libravatar.org/avatar/02d4a0af59175f9123720b4481d55a769ba954e20f6dd9b2792217d9fa0c6089"
 subject="User expectations and what git annex unannex does."
 date="2017-07-24T08:06:55Z"
 content="""
# Where we are

@joey thank you for these explanations, more detailed than when I reported the same problem 8 months ago commenting https://git-annex.branchable.com/git-annex-unannex/ (@tom.prince had already written this page but I did not find it).

Yet all this happens in a git world, where private history can be rewritten, so *there must be a simpler way*.

# What people expect from \"undo accidental add command\"

@tom.prince thanks for explaining what you expected `unannex` to do. Looks like I expected exactly the same behavior.

IMHO current behavior of `git annex unannex` does not match what people expect of \"undo accidental add command\".

# What current `git-annex unannex` actually does

If behavior does not match words, perhaps behavior is interesting but should be matched with different words?

Looking at what `git-annex unannex`, here are the words that came to mind:

> git-annex unannex - turn a path which points to annexed content into a plain file that is store in regular git.

Notice that:

* `git-annex` retains history
* other paths may still refer to the same content, so the annex may still contain a copy of the same data.  Else it becomes unused content subject to `git-annex dropunused`.

Thank you for your attention.

"""]]
