### Please describe the problem.

Recently I found that two repo tests, namely 'concurrent get of dup key regression'
and 'import', fail due to locking problems. I bisected this on my Windows laptop and
found that [[!commit 5a98f2d50913682c4ebe0e0c4ce695c450a96091]] is the first bad commit.

### What steps will reproduce the problem?

`stack setup && stack build`. Then copy git-annex.exe to `C:\annx` and in (Git) Bash say:
```
./git-annex test -p 'Repo Tests' 2>&1 | tee git-annex.test--p-Repo_Tests.LOG~202
grep -E '(concurrent get of dup key regression|import):' git-annex.test--p-Repo_Tests.LOG~202
```

Observe two FAILs.

(It is unfortunate that you can't call for instance `./git-annex.exe test -p 'concurrent get of dup key regression'`
directly because of an unrelated setup issue with Tasty. I guess this would warrant a separate bug report.)

### What version of git-annex are you using? On what operating system?

[[!format sh """
git-annex version: 10.20220505-g5a98f2d50
build flags: Assistant Webapp Pairing TorrentParser Feeds Testsuite S3 WebDAV
dependency versions: aws-0.22 bloomfilter-2.0.1.0 cryptonite-0.29 DAV-1.3.4 feed-1.3.2.0 ghc-8.10.7 http-client-0.7.9 persistent-sqlite-2.13.0.3 torrent-10000.1.1 uuid-1.3.15 yesod-1.6.1.2
key/value backends: SHA256E SHA256 SHA512E SHA512 SHA224E SHA224 SHA384E SHA384 SHA3_256E SHA3_256 SHA3_512E SHA3_512 SHA3_224E SHA3_224 SHA3_384E SHA3_384 SKEIN256E SKEIN256 SKEIN512E SKEIN512 BLAKE2B256E BLAKE2B256 BLAKE2B512E BLAKE2B512 BLAKE2B160E BLAKE2B160 BLAKE2B224E BLAKE2B224 BLAKE2B384E BLAKE2B384 BLAKE2BP512E BLAKE2BP512 BLAKE2S256E BLAKE2S256 BLAKE2S160E BLAKE2S160 BLAKE2S224E BLAKE2S224 BLAKE2SP256E BLAKE2SP256 BLAKE2SP224E BLAKE2SP224 SHA1E SHA1 MD5E MD5 WORM URL X*
remote types: git gcrypt p2p S3 bup directory rsync web bittorrent webdav adb tahoe glacier ddar git-lfs httpalso borg hook external
operating system: mingw32 x86_64
supported repository versions: 8 9 10
upgrade supported from repository versions: 2 3 4 5 6 7 8 9 10
"""]]

Windows 10 version 21H2 (build 19044.1706), 64 bit.

### Have you had any luck using git-annex before? (Sometimes we get tired of reading bug reports all day and a lil' positive end note does wonders)

Git Annex is great. I use it several times a week with my multigigabyte backups, where it gives structure to my image-based backup routines, so you could say I'm a believer. :)

[[!meta author=jkniiv]]
