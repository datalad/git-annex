### Please describe the problem.

Attempting to `git annex get` from a p2phttp remote does not work with authentication. Instead of being asked to supply credentials like with `git annex copy` I instead get this:

```
$ git annex get file1.bin 
get file1.bin (from origin...) 

  FailureResponse (Request {requestPath = (BaseUrl {baseUrlScheme = Http, baseUrlHost = "localhost", baseUrlPort = 3001, baseUrlPath = ""},"/git-annex/d430acae-547f-4e90-8ed7-0e0c57071ae0/v3/key/MD5E-s321388544--0cfb0327388a04a212b45f7099191e1c.bin"), requestQueryString = fromList [("clientuuid",Just "a2aea5f6-9cf1-441a-9a40-061b62a1b078"),("associatedfile",Just "file1.bin")], requestBody = Nothing, requestAccept = fromList [application/octet-stream], requestHeaders = fromList [], requestHttpVersion = HTTP/1.1, requestMethod = "GET"}) (Response {responseStatusCode = Status {statusCode = 401, statusMessage = "Unauthorized"}, responseHeaders = fromList [("Transfer-Encoding","chunked"),("Date","Wed, 07 Aug 2024 11:59:48 GMT"),("Server","Warp/3.3.25"),("WWW-Authenticate","Basic realm=\"git-annex\", charset=\"UTF-8\"")], responseHttpVersion = HTTP/1.1, responseBody = ""})

  Unable to access these remotes: origin

  Maybe add some of these git remotes (git remote add ...):
  	a84bd368-4b2f-4bea-88f6-9d01f6cf32a7 -- icg149@icg1911:~/Playground/test-repo4
failed
get: 1 failed
```

Even if I first `git annex copy` to the remote and set the credentials, `git annex get` doesn't seem to use them. `git annex get` seems to just abort on 401, instead of responding to the WWW-Authenticate header and retrying with credentials.


### What steps will reproduce the problem?

- set up a repository served with `git annex p2phttp`
- clone it
- try to get a file


### What version of git-annex are you using? On what operating system?

```
git-annex version: 10.20240731-g76f31d59b034ef647d0c94bc42aa75f411992230
build flags: Assistant Webapp Pairing Inotify DBus DesktopNotify TorrentParser MagicMime Servant Benchmark Feeds Testsuite S3 WebDAV
dependency versions: aws-0.24.1 bloomfilter-2.0.1.2 crypton-0.33 DAV-1.3.4 feed-1.3.2.1 ghc-9.4.7 http-client-0.7.14 persistent-sqlite-2.13.2.0 torrent-10000.1.3 uuid-1.3.15 yesod-1.6.2.1
key/value backends: SHA256E SHA256 SHA512E SHA512 SHA224E SHA224 SHA384E SHA384 SHA3_256E SHA3_256 SHA3_512E SHA3_512 SHA3_224E SHA3_224 SHA3_384E SHA3_384 SKEIN256E SKEIN256 SKEIN512E SKEIN512 BLAKE2B256E BLAKE2B256 BLAKE2B512E BLAKE2B512 BLAKE2B160E BLAKE2B160 BLAKE2B224E BLAKE2B224 BLAKE2B384E BLAKE2B384 BLAKE2BP512E BLAKE2BP512 BLAKE2S256E BLAKE2S256 BLAKE2S160E BLAKE2S160 BLAKE2S224E BLAKE2S224 BLAKE2SP256E BLAKE2SP256 BLAKE2SP224E BLAKE2SP224 SHA1E SHA1 MD5E MD5 WORM URL GITBUNDLE GITMANIFEST VURL X*
remote types: git gcrypt p2p S3 bup directory rsync web bittorrent webdav adb tahoe glacier ddar git-lfs httpalso borg rclone hook external
operating system: linux x86_64
supported repository versions: 8 9 10
upgrade supported from repository versions: 0 1 2 3 4 5 6 7 8 9 10
local repository version: 10
```

On Ubuntu 22.04


### Please provide any additional information below.

[[!format sh """
# If you can, paste a complete transcript of the problem occurring here.
# If the problem is with the git-annex assistant, paste in .git/annex/daemon.log


# End of transcript or log.
"""]]

### Have you had any luck using git-annex before? (Sometimes we get tired of reading bug reports all day and a lil' positive end note does wonders)

I am currently experimenting with supporting the p2phttp protocol in forgejo-aneksajo. So far I have a prototype working with public repositories and it was surprisingly straightforward, but private repositories do not work yet due to this bug.

> [[fixed|done]] --[[Joey]]
