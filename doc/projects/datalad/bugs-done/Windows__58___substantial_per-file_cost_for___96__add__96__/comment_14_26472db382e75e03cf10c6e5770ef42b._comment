[[!comment format=mdwn
 username="adina.wagner@2a4cac6443aada2bd2a329b8a33f4a7b87cc8eff"
 nickname="adina.wagner"
 avatar="http://cdn.libravatar.org/avatar/80b124ad61d6008fa0f6f0b4b0f7c2ef"
 subject="comment 14"
 date="2021-09-28T19:19:20Z"
 content="""
> And you need to create the file x, containing eg \"foo\", and pipe that file to git-annex smudge --clean x

Thanks much for clarifying! I did run ``git annex init``, but did not create and pipe the file into the command. Here is the profile after running it correctly:


```
	Tue Sep 28 21:00 2021 Time and Allocation Profiling Report  (Final)

	   git-annex.exe +RTS -p -RTS smudge x --clean

	total time  =        0.01 secs   (13 ticks @ 1000 us, 1 processor)
	total alloc =   5,906,000 bytes  (excludes profiling overheads)

COST CENTRE           MODULE                             SRC                                                %time %alloc

cmdname               Types.Command                      Types\Command.hs:80:11-17                           15.4    0.0
MAIN                  MAIN                               <built-in>                                           7.7    0.1
catchMaybeIO          Utility.Exception                  Utility\Exception.hs:53:1-63                         7.7    0.2
readish               Utility.PartialPrelude             Utility\PartialPrelude.hs:(57,1)-(59,20)             7.7    0.4
createProcess         Utility.Process                    Utility\Process.hs:(177,1)-(180,16)                  7.7    6.9
readInodeCache        Utility.InodeCache                 Utility\InodeCache.hs:(175,1)-(186,20)               7.7    0.6
read                  Git.Config                         Git\Config.hs:(41,1)-(43,33)                         7.7    0.0
CAF:cmd3              Command.Find                       <no location info>                                   7.7    0.0
normalise.dropDots    System.FilePath.Windows.ByteString System\FilePath\Windows\..\Internal.hs:1018:9-34     7.7    0.0
execParserPure.pinfo' Options.Applicative.Extra          src\Options\Applicative\Extra.hs:(136,5)-(138,51)    7.7    0.0
uncons                Data.ByteString.UTF8               Data\ByteString\UTF8.hs:(166,1)-(167,38)             7.7    1.0
catch                 Control.Monad.Catch                src\Control\Monad\Catch.hs:333:3-32                  7.7    0.3
doesPathExist         Utility.RawFilePath                Utility\RawFilePath.hs:80:1-49                       0.0    4.0
getFileSize           Utility.FileSize                   Utility\FileSize.hs:37:1-80                          0.0    3.9
toInodeCache'         Utility.InodeCache                 Utility\InodeCache.hs:(196,1)-(206,34)               0.0    9.7
assertLocal           Git                                Git.hs:(131,1)-(137,28)                              0.0    1.1
clean                 Command.Smudge                     Command\Smudge.hs:(90,1)-(173,60)                    0.0    1.1
escape                Database.Persist.Sqlite            Database\Persist\Sqlite.hs:(605,1)-(610,24)          0.0    1.2
getFileType           System.PosixCompat.Files           src\System\PosixCompat\Files.hsc:(350,1)-(355,62)    0.0    9.4
getFileStatus         System.PosixCompat.Files           src\System\PosixCompat\Files.hsc:(312,1)-(337,24)    0.0   19.4
getFileSize           System.PosixCompat.Files           src\System\PosixCompat\Files.hsc:(358,1)-(359,76)    0.0    3.9
unconsB               Codec.Binary.UTF8.Generic          Codec\Binary\UTF8\Generic.hs:297:1-18                0.0    3.7
foldr                 Data.ByteString.UTF8               Data\ByteString\UTF8.hs:(171,1)-(173,40)             0.0    2.8
decode.choose         Data.ByteString.UTF8               Data\ByteString\UTF8.hs:(72,3)-(78,39)               0.0    1.8
decode                Data.ByteString.UTF8               Data\ByteString\UTF8.hs:(68,1)-(124,32)              0.0    1.3
```

>  one thing I am wondering is if antivirus could be slowing it down. I know AV on windows can slow down things like writing to files, because it blocks closing the file until it finishes scanning.

The one I am using doesn't run AV, and I believe @mih's doesn't either. 
"""]]
