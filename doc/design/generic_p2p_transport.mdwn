This is a generic interface that allows git-annex to use a P2P network.

Examples of such networks are tor, yggstack or fowl. (git-annex has a
built-in integration with tor which does not use this interface.)

Such a P2P network has some form of address, which can be
used to connect to a given peer by address across the network.

A git remote using the P2P network has an url of the form
`p2p-annex::<netname>+<address>`

To connect to that remote, git-annex runs the command
`git-annex-p2p-<netname>`, giving it the P2P network address as its only
parameter. The command is responsible for connecting to that peer, and
relaying data to it. Data fed into the command on stdin should be sent to
the peer, and data received from the peer should be output to stdout. If it
is unable to connect, the command can exit nonzero. When the peer closes
connection, the command can exit zero.

To handle incoming connections from peers, `git-annex remotedaemon`
runs `git-annex-p2p-<netname>` with the parameter "socket", followed 
by the P2P address of the local repository. The command
should output a single line, the path of a unix socket file. 
(Any subsequent output is ignored.)
When it does, `git-annex remotedaemon` will use that socket file to listen for connections from
peers, and service them. (The [[P2P_protocol]] is spoken over these
connections.)

Note that, if the P2P network does not natively use a unix socket file,
a command like `socat` can be run by `git-annex-p2p-<netname> socket` 
to convert the P2P network's own equivilant into a unix socket file.

To configure `git-annex remotedaemon` to listen on a given P2P network,
the user runs `git-annex p2p --enable <netname>`. That also
runs `git-annex-p2p-<netname>`, this time with the parameter "address".
That should output a single line, the P2P network address that can be used
by peers to connect to the repository. It can first do whatever it needs to
do to set up the P2P network.

The program [[git-remote-p2p-annex]] is included in git-annex as a git
remote helper program. git will use that program to handle `pull` and
`push` with git remotes that use the `p2p-annex::` url scheme.
