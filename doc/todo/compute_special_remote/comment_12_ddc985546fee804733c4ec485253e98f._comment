[[!comment format=mdwn
 username="joey"
 subject="""comment 12"""
 date="2025-01-28T15:39:44Z"
 content="""
My design so far does not fully support
"Request one key, receive many".

My `git-annex addcomputed` command doesn't handle the case where a
computation generates multiple output files. While the `git-annex-compute-`
command's interface could let it return several computed files, addcomputed
would only adds one file to the name that the user specifies. What is it
supposed to do if the computation generates more than one? Maybe it needs a
way to let a whole directory be populated with the files generated by a
computation. Or a way to specify multiple files to add.

And here's another problem:
Suppose I have one very expensive computation that generates files foo
and bar. And a second, less expensive computation, that also generates foo
(same content) as well as generating baz. Both computations are run on the
same compute special remote. Now if the user runs `git-annex get foo`,
they will be unhappy if it chooses to run the expensive computation,
rather than the less expensive computation.

Since the per-special remote state for a key is used as the computation
input, only one input can be saved for foo's key. So it wouldn't really be
picking between two alernatives, it would just use whatever the current
state for that key is.
"""]]
