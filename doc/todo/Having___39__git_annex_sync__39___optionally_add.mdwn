Hey joey,

Currently, there is no one-command-to-rule-them-all to actually 'get the repo synced entirely'. Current workarounds:

[[!format  bash """
# plain git-annex
git annex add
(git add -A) # for the weird filter issues, see https://github.com/datalad/datalad/issues/7268
git annex sync --content

# with DataLad
datalad save # no way around the weird filter issues currently
git annex sync --content
"""]]

Whenever I introduce new people to git annex, it's always a pain point to explain these multiple steps. It would be awesome to have just one command that syncs everything. Especially for beginners.

`git annex sync` already does quite a bit including `git add`ing and `git commit`ting changes to tracked files. However it doesn't add new files. It would be awesome if `git annex sync` could optionally also do `git annex add`:

[[!format  bash """
# configure 'git annex sync' to run 'git annex add' before as well (opt-in)
git annex config --set annex.syncadd true
# have it sync the content as well
git annex config --set annex.synccontent true

# From then on, 'git annex sync' does a *real* sync: everything that's new/changed here gets pushed elsewhere and new changes get pulled as well.
git annex sync

# This would then basically be a poor-mans-git-annex-assistant ðŸ˜›
while true;do git annex sync --content;done
"""]]


What do you think?

Cheers, Yann
