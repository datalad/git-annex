ATM, git-annex asks for a possibly stored credential for a remote per each file, even if they are to come from the same remote. IMHO it should cache for that `get` run the password to be reused if some next file is to be obtained from the same (git) remote. 

```
lena:/tmp
$> git clone http://data.pymvpa.org/tmp/sampleds/.git/    
Cloning into 'sampleds'...
Username for 'http://data.pymvpa.org': yoh
Password for 'http://yoh@data.pymvpa.org': 
Fetching objects: 50, done.

$> cd sampleds 

$> git annex get *dat
Username for 'http://data.pymvpa.org': yoh
Password for 'http://yoh@data.pymvpa.org': 
get 123.dat (from origin...) 
Username for 'http://data.pymvpa.org': yoh
Password for 'http://yoh@data.pymvpa.org': 
ok
get 1.dat (from origin...) 
Username for 'http://data.pymvpa.org': ^C
```

and `annex --debug` shows that each password prompt due to 

```
[2022-09-06 16:58:31.99087915] (Utility.Process) process [139934] chat: git ["--git-dir=.git","--work-tree=.","--literal-pathspecs","-c","annex.debug=true","credential","fill"]
```

and wondered if such excessive prompting could be avoided without engaging `git` credentials caching functionality.

[[!meta author=yoh]]
[[!tag projects/repronim]]
