# NAME

git-annex get - make content of annexed files available

# SYNOPSIS

git annex get `[path ...]`

# DESCRIPTION

Makes the content of annexed files available in this repository. This
will involve copying them from a remote repository, or downloading them,
or transferring them from some kind of key-value store.

# OPTIONS

* `--auto`

  Rather than getting all files, get only files that don't yet have
  the desired number of copies, or that are preferred content of the
  repository. See [[git-annex-preferred-content]](1)

* `--from=remote`

  Normally git-annex will choose which remotes to get the content
  from, preferring remotes with lower costs. Use this option to specify
  which remote to use. 
  
  Any files that are not available on the remote will be silently skipped.

* `--jobs=N` `-JN`

  Enables parallel download with up to the specified number of jobs
  running at once. For example: `-J10`

  When files can be downloaded from multiple remotes, enabling parallel
  downloads will split the load between the remotes. For example, if
  the files are available on remotes A and B, then one file will be
  downloaded from A, and another file will be downloaded from B in
  parallel. (Remotes with lower costs are still preferred over higher cost
  remotes.)

* file matching options
 
  The [[git-annex-matching-options]](1)
  can be used to specify files to get.

* `--incomplete`

  Resume any incomplete downloads of files that were started and
  interrupted at some point previously. Useful to pick up where you left
  off ... when you don't quite remember where that was.

  These incomplete files are the same ones that are
  listed as unused temp files by [[git-annex-unused]](1).

  Note that the git-annex key will be displayed when downloading,
  as git-annex does not know the associated file, and the associated file
  may not even be in the current git working directory.

* `--all`

  Rather than specifying a filename or path to get, this option can be
  used to get all available versions of all files.

  This is the default behavior when running git-annex in a bare repository.

* `--branch=ref`

  Operate on files in the specified branch or treeish.

* `--unused`

  Operate on files found by last run of git-annex unused.

* `--failed`

  Operate on files that have recently failed to be transferred.

  Not to be confused with `--incomplete` which resumes only downloads
  that managed to transfer part of the content of a file.

* `--key=keyname`

  Use this option to get a specified key.

* `--batch`

  Enables batch mode, in which lines containing names of files to get
  are read from stdin.

  As each specified file is processed, the usual progress output is
  displayed. If the specified file's content is already present, or
  it is not an annexed file, a blank line is output in response instead.

  Since the usual output while getting a file is verbose and not
  machine-parseable, you may want to use --json in combination with
  --batch.

* `--json`

  Enable JSON output. This is intended to be parsed by programs that use
  git-annex. Each line of output is a JSON object.

* `--json-progress`

  Include progress objects in JSON output.

# SEE ALSO

[[git-annex]](1)

[[git-annex-drop]](1)

[[git-annex-copy]](1)

[[git-annex-move]](1)

# AUTHOR

Joey Hess <id@joeyh.name>

Warning: Automatically converted into a man page by mdwn2man. Edit with care.
